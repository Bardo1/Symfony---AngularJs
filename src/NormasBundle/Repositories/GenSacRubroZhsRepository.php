<?php

namespace NormasBundle\Repositories;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\EntityManager;
//use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * GenSacrubrozhsTemporadaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GenSacRubroZhsRepository extends EntityRepository
{

	public function obtenerDatos(){
        return 1; 
	}

	public function buscaSectorRubro($idNsZhs){

	$query = "
    SELECT 
    gs.id as id,
    gs.nombre as nombre
	FROM NormasBundle\Entity\GenSacRubroZhs a
	INNER JOIN NormasBundle\Entity\GenRubro gr WITH (a.idGenRubro = gr.id)
    INNER JOIN NormasBundle\Entity\NsZhs ns  WITH (ns.id = a.idNsZhs)
    INNER JOIN NormasBundle\Entity\GenSector gs WITH (gr.idGenSector = gs.id)
    WHERE a.idNsZhs = :idNsZhs
	GROUP BY 
    gs.id,
    gs.nombre";
	$query = $this->_em->createQuery($query);
    if($idNsZhs != null){
	$query->setParameter('idNsZhs',$idNsZhs);
   	
    }
    
    return $query->getArrayResult(); 
	}

  public function buscaRubros($idSector,$idNsZhs){

    $query = "
    SELECT 
    gr.id as id,
    gr.nombre as nombre
    FROM NormasBundle\Entity\GenSacRubroZhs a
    INNER JOIN NormasBundle\Entity\GenRubro gr WITH (a.idGenRubro = gr.id)
    INNER JOIN NormasBundle\Entity\NsZhs ns  WITH (ns.id = a.idNsZhs)
    INNER JOIN NormasBundle\Entity\GenSector gs WITH (gr.idGenSector = gs.id)
    WHERE a.idNsZhs = :idNsZhs
    AND gs.id = :idSector
    GROUP BY 
    gr.id,
    gr.nombre
    ";

    $query = $this->_em->createQuery($query);
    
    if($idNsZhs != null){
    $query->setParameter('idNsZhs',$idNsZhs);
    }
    
    if($idSector != null){
    $query->setParameter('idSector',$idSector);
    }

    return $query->getArrayResult(); 
  }

	public function buscaSacs($idRubro,$idNsZhs){

	$query = "
    SELECT 
    a.id as idSrz,
    gsc.id as id,
    gr1.id as idRubro,
    gr1.nombre as rubro,
    ns.codigo as zhs,
    gs.nombre as sector,
    gsc.codigo as idSac,
    gsc.nombre as sac,
    gc.nombre as comuna,
    gr.nombre as region,
    gr.orden  as orden
	FROM NormasBundle\Entity\GenSacRubroZhs a
	INNER JOIN NormasBundle\Entity\GenRubro gr1 WITH (a.idGenRubro = gr1.id)
    INNER JOIN NormasBundle\Entity\NsZhs ns  WITH (ns.id = a.idNsZhs)
    INNER JOIN NormasBundle\Entity\GenSector gs WITH (gr1.idGenSector = gs.id)
    INNER JOIN NormasBundle\Entity\GenSac gsc WITH (gsc.id = a.idGenSac)
    INNER JOIN NormasBundle\Entity\GenComuna gc WITH (gc.id = gsc.idGenComuna)
    INNER JOIN NormasBundle\Entity\GenRegion gr WITH (gr.id = gc.idGenRegion)
    WHERE a.idNsZhs = :idNsZhs
    AND gr1.id = :idRubro
    AND a.activo != -1
	group by
    a.id,
    gsc.id, 
	gr1.id,
    gr1.nombre,
    ns.codigo,
    gs.nombre,
    gsc.codigo,
    gsc.nombre,
    gc.nombre,
    gr.nombre,
    gr.orden
    order by
    gr.orden desc,
    gc.nombre asc, 
    gsc.nombre desc
	";
    
    $query = $this->_em->createQuery($query);
      if($idRubro != null){
 	 	   $query->setParameter('idRubro',$idRubro);
 	 	}

 	 	if($idNsZhs != null){
 	 	   $query->setParameter('idNsZhs',$idNsZhs);
 	 	}

    return $query->getArrayResult();

	}

    public function buscaidSrzTemporada($idgSrz){

    $query = "
    SELECT
    a.id as idSrz,
    b.id as idSrzTemp,
    c.id as idTempVer
    FROM NormasBundle\Entity\GenSacRubroZhs a
    INNER JOIN NormasBundle\Entity\GenSacRubroZhsTemporada b WITH (a.id = b.idGenSacRubroZhs)
    INNER JOIN NormasBundle\Entity\GenTemporadaVersion c WITH (c.id = b.idGenTemporadaVersion)
    WHERE a.id = :idgSrz
    GROUP BY 
    a.id,
    b.id,
    c.id";

    /* select a.id as idSrz,b.id as idSrzTemp, c.id as idTemVer 
    from PUBLIC.gen_sac_rubro_zhs a 
    inner join public.gen_sac_rubro_zhs_temporada b on a.id = b.id_gen_sac_rubro_zhs
    inner join public.gen_temporada_version c on c.id = b.id_gen_temporada_version
    where a.id = 5483
    group by a.id, b.id, c.id;
    */
    $query = $this->_em->createQuery($query);
    if($idgSrz != null){
    $query->setParameter('idgSrz',$idgSrz);
    }

    return $query->getArrayResult(); 
  }

}

